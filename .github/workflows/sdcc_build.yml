name: Build SDCC for GBDK

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the develop branch
  # push:
  #   branches: [ develop ]
  # pull_request:
  #   branches: [ develop ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            name: Linux-x64
#          - os: macos-11
#            name: MacOS-x64
    steps:
      # ==== Pre-Build: Set environment vars ====
      # Needs to be in a separate step than build so that setting the environment var takes effect
      #
      - name: Pre-Build Linux/MacOS
        if: (matrix.name == 'Linux-x64') || (matrix.name == 'MacOS-x64')
        shell: bash
        run: |
          echo "SDCC_VER=14068" >> $GITHUB_ENV
          echo "BUILD_PACKAGE_FILENAME=sdcc-14068-${{ matrix.name }}.tar.gz" >> $GITHUB_ENV

      # ==== Install Dependencies ====
      - name: Install Dependencies
        if: (matrix.name == 'Linux-x64')
        run: |
          # Packages (some may already be present)
          sudo apt-get install flex bison libboost-dev texinfo zlib1g zlib1g-dev

      # ==== Download SDCC sources ====
      - name: Download SDCC Sources
        if: (matrix.name == 'Linux-x64') || (matrix.name == 'MacOS-x64')
        run: |
          # Checkout SDCC source
          svn checkout -q -r $SDCC_VER svn://svn.code.sf.net/p/sdcc/code/trunk sdcc-${{ env.SDCC_VER }}

      # ==== Build SDCC ====
      - name: Build SDCC
        if: (matrix.name == 'Linux-x64') || (matrix.name == 'MacOS-x64')
        shell: bash
        run: |    
          cd sdcc-${{ env.SDCC_VER }}/sdcc
          ./configure  --enable-gbz80-port  --enable-z80-port  --enable-mos6502-port  --enable-mos65c02-port  --disable-mcs51-port  --disable-z180-port  --disable-r2k-port  --disable-r2ka-port  --disable-r3ka-port  --disable-tlcs90-port  --disable-ez80_z80-port  --disable-z80n-port  --disable-ds390-port  --disable-ds400-port  --disable-pic14-port  --disable-pic16-port  --disable-hc08-port  --disable-s08-port  --disable-stm8-port  --disable-pdk13-port  --disable-pdk14-port  --disable-pdk15-port  --disable-ucsim  --disable-doc  --disable-device-lib 
          make
          # New sdcc build no longer copies some binaries to bin
          find *
          ls -la bin
          cp -f src/sdcc bin
          cp -f support/sdbinutils/binutils/sdar bin
          cp -f support/sdbinutils/binutils/sdranlib bin
          cp -f support/sdbinutils/binutils/sdobjcopy bin
          cp -f support/sdbinutils/binutils/sdnm bin
          cp -f support/cpp/gcc/cc1 bin
          cp -f support/cpp/gcc/cpp sdcpp
          strip bin/* || true
          ls -la bin          
          cd ../..


      # ==== Packaging ====
      - name: Package build Linux/MacOS
        if: (matrix.name == 'Linux-x64') || (matrix.name == 'MacOS-x64')
        shell: bash
        run: |
          cd sdcc-${{ env.SDCC_VER }}/sdcc
          tar cvzf ../../${{ env.BUILD_PACKAGE_FILENAME }} bin
          cd ../..
          pwd
          ls -la

      - name: Store build
        if: (matrix.name == 'Linux-64') || (matrix.name == 'MacOS-64')
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}-build
          path: gbdk-2020-sdcc/${{ env.BUILD_PACKAGE_FILENAME }}
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
          # retention-days: 14
